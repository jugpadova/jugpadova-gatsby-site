{"version":3,"file":"component---src-pages-index-js-951573c0c4f14610253e.js","mappings":"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","sources":["webpack://jugpadova-gatsby-site/./src/components/category-menu.js","webpack://jugpadova-gatsby-site/./src/components/post-item.js","webpack://jugpadova-gatsby-site/./src/components/tag-cloud.js","webpack://jugpadova-gatsby-site/./node_modules/js-search/dist/esm/js-search.js","webpack://jugpadova-gatsby-site/./node_modules/stemmer/index.js","webpack://jugpadova-gatsby-site/./src/utilities/utilities.js","webpack://jugpadova-gatsby-site/./src/utilities/search.js","webpack://jugpadova-gatsby-site/./src/components/search.js","webpack://jugpadova-gatsby-site/./src/pages/index.js"],"sourcesContent":["import React from \"react\"\nimport { useStaticQuery, graphql, Link } from \"gatsby\"\nimport styled from \"styled-components\"\n\nconst Wrapper = styled.nav`\n  & > ol {\n    list-style-type: none;\n  }\n\n  & > ol > li {\n    margin-bottom: 0.5em;\n    white-space: nowrap;\n  }\n`\n\nconst CategoryMenu = () => {\n  const data = useStaticQuery(graphql`\n    query {\n      allMarkdownRemark(\n        limit: 5000\n        filter: { fileAbsolutePath: { regex: \"/(/blog/)/\" } }\n      ) {\n        group(field: frontmatter___categories___permalink) {\n          fieldValue\n          totalCount\n          nodes {\n            frontmatter {\n              categories {\n                name\n                permalink\n              }\n            }\n          }\n        }\n      }\n    }\n  `)\n  const categories = data.allMarkdownRemark.group\n  return (\n    <Wrapper>\n      <h3>Categorie</h3>\n      <ol>\n        {categories.map(category => (\n          <li key={category.fieldValue}>\n            <Link to={`/articles/category/${category.fieldValue}`}>\n              {category.nodes[0].frontmatter.categories.find(c => c.permalink === category.fieldValue).name}\n            </Link>{\" \"}\n            ({category.totalCount})\n          </li>\n        ))}\n      </ol>\n    </Wrapper>\n  )\n}\n\nexport default CategoryMenu\n","import * as React from \"react\"\nimport { Link } from \"gatsby\"\nimport Gravatar from \"../components/gravatar\"\nimport styled from \"styled-components\"\nimport CategoryList from \"./category-list\"\nimport TagList from \"./tag-list\"\n\nconst AuthorWrapper = styled.span`\n  display: flex;\n  align-items: center;\n  font-size: 0.8em;\n  & > * {\n    margin-right: 0.5em;\n  }\n`\n\nconst LinksWrapper = styled.nav`\n  display: flex ;\n  justify-content: flex-end;\n  align-items: center;\n  margin-top: 0.5rem;\n\n  & > * {\n    margin-left: 0.5em;\n  }\n`\n\nconst PostItem = ({ slug, title, author, date, content, categories, tags }) => {\n  return (\n    <li key={slug}>\n      <article\n        className=\"post-list-item\"\n        itemScope\n        itemType=\"http://schema.org/Article\"\n      >\n        <header>\n          <h2>\n            <Link to={slug} itemProp=\"url\">\n              <span itemProp=\"headline\">{title}</span>\n            </Link>\n          </h2>\n          <AuthorWrapper>\n            <Gravatar {...author} />\n            <span>|</span>\n            <span>{date}</span>\n          </AuthorWrapper>\n        </header>\n        <section>\n          <p\n            dangerouslySetInnerHTML={{\n              __html: content,\n            }}\n            itemProp=\"description\"\n          />\n        </section>\n        <LinksWrapper>\n            <CategoryList categories={categories}/>\n            <div>|</div>\n            <TagList tags={tags}/>\n        </LinksWrapper>\n      </article>\n    </li>\n  )\n}\n\nexport default PostItem\n","import React from \"react\"\nimport { useStaticQuery, graphql, Link } from \"gatsby\"\nimport styled from \"styled-components\"\n\nconst Wrapper = styled.nav``\n\nconst TagCloud = () => {\n  const data = useStaticQuery(graphql`\n    query {\n      allMarkdownRemark(\n        limit: 5000\n        filter: { fileAbsolutePath: { regex: \"/(/blog/)/\" } }\n      ) {\n        group(field: frontmatter___tags___name) {\n          fieldValue\n          totalCount\n          nodes {\n            frontmatter {\n              tags {\n                name\n                display\n              }\n            }\n          }\n        }\n      }\n    }\n  `)\n  const tags = data.allMarkdownRemark.group\n  const cloudTags = tags\n    .map(tag => {\n      return {\n        name: tag.fieldValue,\n        display: tag.nodes[0].frontmatter.tags.find(\n          t => t.name === tag.fieldValue\n        ).display,\n        totalCount: tag.totalCount,\n      }\n    })\n    .sort((a, b) => b.totalCount - a.totalCount)\n    .slice(0, 40)\n    .sort((a, b) =>\n      a.display.toLowerCase().localeCompare(b.display.toLowerCase())\n    )\n  const [min, max] = cloudTags\n    .map(tag => tag.totalCount)\n    .reduce(\n      ([prevMin, prevMax], curr) => [\n        Math.min(prevMin, curr),\n        Math.max(prevMax, curr),\n      ],\n      [Infinity, -Infinity]\n    )\n  return (\n    <Wrapper>\n      <h3>Tag</h3>\n      <div>\n        {cloudTags.map(tag => (\n          <span\n            key={tag.name}\n            style={{\n              fontSize:\n                66 + ((tag.totalCount - min) * (200 - 66)) / (max - min) + \"%\",\n            }}\n          >\n            <Link to={`/articles/tag/${tag.name}`}>{tag.display}</Link><span> </span>\n          </span>\n        ))}\n      </div>\n    </Wrapper>\n  )\n}\n\nexport default TagCloud\n","/**\n * Indexes for all substring searches (e.g. the term \"cat\" is indexed as \"c\", \"ca\", \"cat\", \"a\", \"at\", and \"t\").\n */\nvar AllSubstringsIndexStrategy = /*#__PURE__*/function () {\n  function AllSubstringsIndexStrategy() {}\n\n  var _proto = AllSubstringsIndexStrategy.prototype;\n  /**\n   * @inheritDocs\n   */\n\n  _proto.expandToken = function expandToken(token) {\n    var expandedTokens = [];\n    var string;\n\n    for (var i = 0, length = token.length; i < length; ++i) {\n      string = '';\n\n      for (var j = i; j < length; ++j) {\n        string += token.charAt(j);\n        expandedTokens.push(string);\n      }\n    }\n\n    return expandedTokens;\n  };\n\n  return AllSubstringsIndexStrategy;\n}();\n/**\n * Indexes for exact word matches.\n */\n\n\nvar ExactWordIndexStrategy = /*#__PURE__*/function () {\n  function ExactWordIndexStrategy() {}\n\n  var _proto = ExactWordIndexStrategy.prototype;\n  /**\n   * @inheritDocs\n   */\n\n  _proto.expandToken = function expandToken(token) {\n    return token ? [token] : [];\n  };\n\n  return ExactWordIndexStrategy;\n}();\n/**\n * Indexes for prefix searches (e.g. the term \"cat\" is indexed as \"c\", \"ca\", and \"cat\" allowing prefix search lookups).\n */\n\n\nvar PrefixIndexStrategy = /*#__PURE__*/function () {\n  function PrefixIndexStrategy() {}\n\n  var _proto = PrefixIndexStrategy.prototype;\n  /**\n   * @inheritDocs\n   */\n\n  _proto.expandToken = function expandToken(token) {\n    var expandedTokens = [];\n    var string = '';\n\n    for (var i = 0, length = token.length; i < length; ++i) {\n      string += token.charAt(i);\n      expandedTokens.push(string);\n    }\n\n    return expandedTokens;\n  };\n\n  return PrefixIndexStrategy;\n}();\n/**\n * Enforces case-sensitive text matches.\n */\n\n\nvar CaseSensitiveSanitizer = /*#__PURE__*/function () {\n  function CaseSensitiveSanitizer() {}\n\n  var _proto = CaseSensitiveSanitizer.prototype;\n  /**\n   * @inheritDocs\n   */\n\n  _proto.sanitize = function sanitize(text) {\n    return text ? text.trim() : '';\n  };\n\n  return CaseSensitiveSanitizer;\n}();\n/**\n * Sanitizes text by converting to a locale-friendly lower-case version and triming leading and trailing whitespace.\n */\n\n\nvar LowerCaseSanitizer = /*#__PURE__*/function () {\n  function LowerCaseSanitizer() {}\n\n  var _proto = LowerCaseSanitizer.prototype;\n  /**\n   * @inheritDocs\n   */\n\n  _proto.sanitize = function sanitize(text) {\n    return text ? text.toLocaleLowerCase().trim() : '';\n  };\n\n  return LowerCaseSanitizer;\n}();\n/**\n * Find and return a nested object value.\n *\n * @param object to crawl\n * @param path Property path\n * @returns {any}\n */\n\n\nfunction getNestedFieldValue(object, path) {\n  path = path || [];\n  object = object || {};\n  var value = object; // walk down the property path\n\n  for (var i = 0; i < path.length; i++) {\n    value = value[path[i]];\n\n    if (value == null) {\n      return null;\n    }\n  }\n\n  return value;\n}\n/**\n * Search index capable of returning results matching a set of tokens and ranked according to TF-IDF.\n */\n\n\nvar TfIdfSearchIndex = /*#__PURE__*/function () {\n  function TfIdfSearchIndex(uidFieldName) {\n    this._uidFieldName = uidFieldName;\n    this._tokenToIdfCache = {};\n    this._tokenMap = {};\n  }\n  /**\n   * @inheritDocs\n   */\n\n\n  var _proto = TfIdfSearchIndex.prototype;\n\n  _proto.indexDocument = function indexDocument(token, uid, doc) {\n    this._tokenToIdfCache = {}; // New index invalidates previous IDF caches\n\n    var tokenMap = this._tokenMap;\n    var tokenDatum;\n\n    if (typeof tokenMap[token] !== 'object') {\n      tokenMap[token] = tokenDatum = {\n        $numDocumentOccurrences: 0,\n        $totalNumOccurrences: 1,\n        $uidMap: {}\n      };\n    } else {\n      tokenDatum = tokenMap[token];\n      tokenDatum.$totalNumOccurrences++;\n    }\n\n    var uidMap = tokenDatum.$uidMap;\n\n    if (typeof uidMap[uid] !== 'object') {\n      tokenDatum.$numDocumentOccurrences++;\n      uidMap[uid] = {\n        $document: doc,\n        $numTokenOccurrences: 1\n      };\n    } else {\n      uidMap[uid].$numTokenOccurrences++;\n    }\n  }\n  /**\n   * @inheritDocs\n   */\n  ;\n\n  _proto.search = function search(tokens, corpus) {\n    var uidToDocumentMap = {};\n\n    for (var i = 0, numTokens = tokens.length; i < numTokens; i++) {\n      var token = tokens[i];\n      var tokenMetadata = this._tokenMap[token]; // Short circuit if no matches were found for any given token.\n\n      if (!tokenMetadata) {\n        return [];\n      }\n\n      if (i === 0) {\n        var keys = Object.keys(tokenMetadata.$uidMap);\n\n        for (var j = 0, numKeys = keys.length; j < numKeys; j++) {\n          var uid = keys[j];\n          uidToDocumentMap[uid] = tokenMetadata.$uidMap[uid].$document;\n        }\n      } else {\n        var keys = Object.keys(uidToDocumentMap);\n\n        for (var j = 0, numKeys = keys.length; j < numKeys; j++) {\n          var uid = keys[j];\n\n          if (typeof tokenMetadata.$uidMap[uid] !== 'object') {\n            delete uidToDocumentMap[uid];\n          }\n        }\n      }\n    }\n\n    var documents = [];\n\n    for (var uid in uidToDocumentMap) {\n      documents.push(uidToDocumentMap[uid]);\n    }\n\n    var calculateTfIdf = this._createCalculateTfIdf(); // Return documents sorted by TF-IDF\n\n\n    return documents.sort(function (documentA, documentB) {\n      return calculateTfIdf(tokens, documentB, corpus) - calculateTfIdf(tokens, documentA, corpus);\n    });\n  };\n\n  _proto._createCalculateIdf = function _createCalculateIdf() {\n    var tokenMap = this._tokenMap;\n    var tokenToIdfCache = this._tokenToIdfCache;\n    return function calculateIdf(token, documents) {\n      if (!tokenToIdfCache[token]) {\n        var numDocumentsWithToken = typeof tokenMap[token] !== 'undefined' ? tokenMap[token].$numDocumentOccurrences : 0;\n        tokenToIdfCache[token] = 1 + Math.log(documents.length / (1 + numDocumentsWithToken));\n      }\n\n      return tokenToIdfCache[token];\n    };\n  };\n\n  _proto._createCalculateTfIdf = function _createCalculateTfIdf() {\n    var tokenMap = this._tokenMap;\n    var uidFieldName = this._uidFieldName;\n\n    var calculateIdf = this._createCalculateIdf();\n\n    return function calculateTfIdf(tokens, document, documents) {\n      var score = 0;\n\n      for (var i = 0, numTokens = tokens.length; i < numTokens; ++i) {\n        var token = tokens[i];\n        var inverseDocumentFrequency = calculateIdf(token, documents);\n\n        if (inverseDocumentFrequency === Infinity) {\n          inverseDocumentFrequency = 0;\n        }\n\n        var uid;\n\n        if (uidFieldName instanceof Array) {\n          uid = document && getNestedFieldValue(document, uidFieldName);\n        } else {\n          uid = document && document[uidFieldName];\n        }\n\n        var termFrequency = typeof tokenMap[token] !== 'undefined' && typeof tokenMap[token].$uidMap[uid] !== 'undefined' ? tokenMap[token].$uidMap[uid].$numTokenOccurrences : 0;\n        score += termFrequency * inverseDocumentFrequency;\n      }\n\n      return score;\n    };\n  };\n\n  return TfIdfSearchIndex;\n}();\n/**\n * Search index capable of returning results matching a set of tokens but without any meaningful rank or order.\n */\n\n\nvar UnorderedSearchIndex = /*#__PURE__*/function () {\n  function UnorderedSearchIndex() {\n    this._tokenToUidToDocumentMap = {};\n  }\n  /**\n   * @inheritDocs\n   */\n\n\n  var _proto = UnorderedSearchIndex.prototype;\n\n  _proto.indexDocument = function indexDocument(token, uid, doc) {\n    if (typeof this._tokenToUidToDocumentMap[token] !== 'object') {\n      this._tokenToUidToDocumentMap[token] = {};\n    }\n\n    this._tokenToUidToDocumentMap[token][uid] = doc;\n  }\n  /**\n   * @inheritDocs\n   */\n  ;\n\n  _proto.search = function search(tokens, corpus) {\n    var intersectingDocumentMap = {};\n    var tokenToUidToDocumentMap = this._tokenToUidToDocumentMap;\n\n    for (var i = 0, numTokens = tokens.length; i < numTokens; i++) {\n      var token = tokens[i];\n      var documentMap = tokenToUidToDocumentMap[token]; // Short circuit if no matches were found for any given token.\n\n      if (!documentMap) {\n        return [];\n      }\n\n      if (i === 0) {\n        var keys = Object.keys(documentMap);\n\n        for (var j = 0, numKeys = keys.length; j < numKeys; j++) {\n          var uid = keys[j];\n          intersectingDocumentMap[uid] = documentMap[uid];\n        }\n      } else {\n        var keys = Object.keys(intersectingDocumentMap);\n\n        for (var j = 0, numKeys = keys.length; j < numKeys; j++) {\n          var uid = keys[j];\n\n          if (typeof documentMap[uid] !== 'object') {\n            delete intersectingDocumentMap[uid];\n          }\n        }\n      }\n    }\n\n    var keys = Object.keys(intersectingDocumentMap);\n    var documents = [];\n\n    for (var i = 0, numKeys = keys.length; i < numKeys; i++) {\n      var uid = keys[i];\n      documents.push(intersectingDocumentMap[uid]);\n    }\n\n    return documents;\n  };\n\n  return UnorderedSearchIndex;\n}();\n\nvar REGEX = /[^a-zа-яё0-9\\-']+/i;\n/**\n * Simple tokenizer that splits strings on whitespace characters and returns an array of all non-empty substrings.\n */\n\nvar SimpleTokenizer = /*#__PURE__*/function () {\n  function SimpleTokenizer() {}\n\n  var _proto = SimpleTokenizer.prototype;\n  /**\n   * @inheritDocs\n   */\n\n  _proto.tokenize = function tokenize(text) {\n    return text.split(REGEX).filter(function (text) {\n      return text;\n    } // Filter empty tokens\n    );\n  };\n\n  return SimpleTokenizer;\n}();\n/**\n * Stemming is the process of reducing search tokens to their root (or stem) so that searches for different forms of a\n * word will match. For example \"search\", \"searching\" and \"searched\" are all reduced to the stem \"search\".\n *\n * <p>This stemming tokenizer converts tokens (words) to their stem forms before returning them. It requires an\n * external stemming function to be provided; for this purpose I recommend the NPM 'porter-stemmer' library.\n *\n * <p>For more information see http : //tartarus.org/~martin/PorterStemmer/\n */\n\n\nvar StemmingTokenizer = /*#__PURE__*/function () {\n  /**\n   * Constructor.\n   *\n   * @param stemmingFunction Function capable of accepting a word and returning its stem.\n   * @param decoratedIndexStrategy Index strategy to be run after all stop words have been removed.\n   */\n  function StemmingTokenizer(stemmingFunction, decoratedTokenizer) {\n    this._stemmingFunction = stemmingFunction;\n    this._tokenizer = decoratedTokenizer;\n  }\n  /**\n   * @inheritDocs\n   */\n\n\n  var _proto = StemmingTokenizer.prototype;\n\n  _proto.tokenize = function tokenize(text) {\n    return this._tokenizer.tokenize(text).map(this._stemmingFunction);\n  };\n\n  return StemmingTokenizer;\n}();\n/**\n * Stop words list copied from Lunr JS.\n */\n\n\nvar StopWordsMap = {\n  a: true,\n  able: true,\n  about: true,\n  across: true,\n  after: true,\n  all: true,\n  almost: true,\n  also: true,\n  am: true,\n  among: true,\n  an: true,\n  and: true,\n  any: true,\n  are: true,\n  as: true,\n  at: true,\n  be: true,\n  because: true,\n  been: true,\n  but: true,\n  by: true,\n  can: true,\n  cannot: true,\n  could: true,\n  dear: true,\n  did: true,\n  'do': true,\n  does: true,\n  either: true,\n  'else': true,\n  ever: true,\n  every: true,\n  'for': true,\n  from: true,\n  'get': true,\n  got: true,\n  had: true,\n  has: true,\n  have: true,\n  he: true,\n  her: true,\n  hers: true,\n  him: true,\n  his: true,\n  how: true,\n  however: true,\n  i: true,\n  'if': true,\n  'in': true,\n  into: true,\n  is: true,\n  it: true,\n  its: true,\n  just: true,\n  least: true,\n  \"let\": true,\n  like: true,\n  likely: true,\n  may: true,\n  me: true,\n  might: true,\n  most: true,\n  must: true,\n  my: true,\n  neither: true,\n  no: true,\n  nor: true,\n  not: true,\n  of: true,\n  off: true,\n  often: true,\n  on: true,\n  only: true,\n  or: true,\n  other: true,\n  our: true,\n  own: true,\n  rather: true,\n  said: true,\n  say: true,\n  says: true,\n  she: true,\n  should: true,\n  since: true,\n  so: true,\n  some: true,\n  than: true,\n  that: true,\n  the: true,\n  their: true,\n  them: true,\n  then: true,\n  there: true,\n  these: true,\n  they: true,\n  'this': true,\n  tis: true,\n  to: true,\n  too: true,\n  twas: true,\n  us: true,\n  wants: true,\n  was: true,\n  we: true,\n  were: true,\n  what: true,\n  when: true,\n  where: true,\n  which: true,\n  'while': true,\n  who: true,\n  whom: true,\n  why: true,\n  will: true,\n  'with': true,\n  would: true,\n  yet: true,\n  you: true,\n  your: true\n}; // Prevent false positives for inherited properties\n\nStopWordsMap.constructor = false;\nStopWordsMap.hasOwnProperty = false;\nStopWordsMap.isPrototypeOf = false;\nStopWordsMap.propertyIsEnumerable = false;\nStopWordsMap.toLocaleString = false;\nStopWordsMap.toString = false;\nStopWordsMap.valueOf = false;\n/**\n * Stop words are very common (e.g. \"a\", \"and\", \"the\") and are often not semantically meaningful in the context of a\n * search. This tokenizer removes stop words from a set of tokens before passing the remaining tokens along for\n * indexing or searching purposes.\n */\n\nvar StopWordsTokenizer = /*#__PURE__*/function () {\n  /**\n   * Constructor.\n   *\n   * @param decoratedIndexStrategy Index strategy to be run after all stop words have been removed.\n   */\n  function StopWordsTokenizer(decoratedTokenizer) {\n    this._tokenizer = decoratedTokenizer;\n  }\n  /**\n   * @inheritDocs\n   */\n\n\n  var _proto = StopWordsTokenizer.prototype;\n\n  _proto.tokenize = function tokenize(text) {\n    return this._tokenizer.tokenize(text).filter(function (token) {\n      return !StopWordsMap[token];\n    });\n  };\n\n  return StopWordsTokenizer;\n}();\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n/**\n * Simple client-side searching within a set of documents.\n *\n * <p>Documents can be searched by any number of fields. Indexing and search strategies are highly customizable.\n */\n\n\nvar Search = /*#__PURE__*/function () {\n  /**\n   * Array containing either a property name or a path (list of property names) to a nested value\n   */\n\n  /**\n   * Constructor.\n   * @param uidFieldName Field containing values that uniquely identify search documents; this field's values are used\n   *                     to ensure that a search result set does not contain duplicate objects.\n   */\n  function Search(uidFieldName) {\n    if (!uidFieldName) {\n      throw Error('js-search requires a uid field name constructor parameter');\n    }\n\n    this._uidFieldName = uidFieldName; // Set default/recommended strategies\n\n    this._indexStrategy = new PrefixIndexStrategy();\n    this._searchIndex = new TfIdfSearchIndex(uidFieldName);\n    this._sanitizer = new LowerCaseSanitizer();\n    this._tokenizer = new SimpleTokenizer();\n    this._documents = [];\n    this._searchableFields = [];\n  }\n  /**\n   * Override the default index strategy.\n   * @param value Custom index strategy\n   * @throws Error if documents have already been indexed by this search instance\n   */\n\n\n  var _proto = Search.prototype;\n  /**\n   * Add a searchable document to the index. Document will automatically be indexed for search.\n   * @param document\n   */\n\n  _proto.addDocument = function addDocument(document) {\n    this.addDocuments([document]);\n  }\n  /**\n   * Adds searchable documents to the index. Documents will automatically be indexed for search.\n   * @param document\n   */\n  ;\n\n  _proto.addDocuments = function addDocuments(documents) {\n    this._documents = this._documents.concat(documents);\n    this.indexDocuments_(documents, this._searchableFields);\n  }\n  /**\n   * Add a new searchable field to the index. Existing documents will automatically be indexed using this new field.\n   *\n   * @param field Searchable field or field path. Pass a string to index a top-level field and an array of strings for nested fields.\n   */\n  ;\n\n  _proto.addIndex = function addIndex(field) {\n    this._searchableFields.push(field);\n\n    this.indexDocuments_(this._documents, [field]);\n  }\n  /**\n   * Search all documents for ones matching the specified query text.\n   * @param query\n   * @returns {Array<Object>}\n   */\n  ;\n\n  _proto.search = function search(query) {\n    var tokens = this._tokenizer.tokenize(this._sanitizer.sanitize(query));\n\n    return this._searchIndex.search(tokens, this._documents);\n  }\n  /**\n   * @param documents\n   * @param _searchableFields Array containing property names and paths (lists of property names) to nested values\n   * @private\n   */\n  ;\n\n  _proto.indexDocuments_ = function indexDocuments_(documents, _searchableFields) {\n    this._initialized = true;\n    var indexStrategy = this._indexStrategy;\n    var sanitizer = this._sanitizer;\n    var searchIndex = this._searchIndex;\n    var tokenizer = this._tokenizer;\n    var uidFieldName = this._uidFieldName;\n\n    for (var di = 0, numDocuments = documents.length; di < numDocuments; di++) {\n      var doc = documents[di];\n      var uid;\n\n      if (uidFieldName instanceof Array) {\n        uid = getNestedFieldValue(doc, uidFieldName);\n      } else {\n        uid = doc[uidFieldName];\n      }\n\n      for (var sfi = 0, numSearchableFields = _searchableFields.length; sfi < numSearchableFields; sfi++) {\n        var fieldValue;\n        var searchableField = _searchableFields[sfi];\n\n        if (searchableField instanceof Array) {\n          fieldValue = getNestedFieldValue(doc, searchableField);\n        } else {\n          fieldValue = doc[searchableField];\n        }\n\n        if (fieldValue != null && typeof fieldValue !== 'string' && fieldValue.toString) {\n          fieldValue = fieldValue.toString();\n        }\n\n        if (typeof fieldValue === 'string') {\n          var fieldTokens = tokenizer.tokenize(sanitizer.sanitize(fieldValue));\n\n          for (var fti = 0, numFieldValues = fieldTokens.length; fti < numFieldValues; fti++) {\n            var fieldToken = fieldTokens[fti];\n            var expandedTokens = indexStrategy.expandToken(fieldToken);\n\n            for (var eti = 0, nummExpandedTokens = expandedTokens.length; eti < nummExpandedTokens; eti++) {\n              var expandedToken = expandedTokens[eti];\n              searchIndex.indexDocument(expandedToken, uid, doc);\n            }\n          }\n        }\n      }\n    }\n  };\n\n  _createClass(Search, [{\n    key: \"indexStrategy\",\n    set: function set(value) {\n      if (this._initialized) {\n        throw Error('IIndexStrategy cannot be set after initialization');\n      }\n\n      this._indexStrategy = value;\n    },\n    get: function get() {\n      return this._indexStrategy;\n    }\n    /**\n     * Override the default text sanitizing strategy.\n     * @param value Custom text sanitizing strategy\n     * @throws Error if documents have already been indexed by this search instance\n     */\n\n  }, {\n    key: \"sanitizer\",\n    set: function set(value) {\n      if (this._initialized) {\n        throw Error('ISanitizer cannot be set after initialization');\n      }\n\n      this._sanitizer = value;\n    },\n    get: function get() {\n      return this._sanitizer;\n    }\n    /**\n     * Override the default search index strategy.\n     * @param value Custom search index strategy\n     * @throws Error if documents have already been indexed\n     */\n\n  }, {\n    key: \"searchIndex\",\n    set: function set(value) {\n      if (this._initialized) {\n        throw Error('ISearchIndex cannot be set after initialization');\n      }\n\n      this._searchIndex = value;\n    },\n    get: function get() {\n      return this._searchIndex;\n    }\n    /**\n     * Override the default text tokenizing strategy.\n     * @param value Custom text tokenizing strategy\n     * @throws Error if documents have already been indexed by this search instance\n     */\n\n  }, {\n    key: \"tokenizer\",\n    set: function set(value) {\n      if (this._initialized) {\n        throw Error('ITokenizer cannot be set after initialization');\n      }\n\n      this._tokenizer = value;\n    },\n    get: function get() {\n      return this._tokenizer;\n    }\n  }]);\n\n  return Search;\n}();\n/**\n * This utility highlights the occurrences of tokens within a string of text. It can be used to give visual indicators\n * of match criteria within searchable fields.\n *\n * <p>For performance purposes this highlighter only works with full-word or prefix token indexes.\n */\n\n\nvar TokenHighlighter = /*#__PURE__*/function () {\n  /**\n   * Constructor.\n   *\n   * @param opt_indexStrategy Index strategy used by Search\n   * @param opt_sanitizer Sanitizer used by Search\n   * @param opt_wrapperTagName Optional wrapper tag name; defaults to 'mark' (e.g. <mark>)\n   */\n  function TokenHighlighter(opt_indexStrategy, opt_sanitizer, opt_wrapperTagName) {\n    this._indexStrategy = opt_indexStrategy || new PrefixIndexStrategy();\n    this._sanitizer = opt_sanitizer || new LowerCaseSanitizer();\n    this._wrapperTagName = opt_wrapperTagName || 'mark';\n  }\n  /**\n   * Highlights token occurrences within a string by wrapping them with a DOM element.\n   *\n   * @param text e.g. \"john wayne\"\n   * @param tokens e.g. [\"wa\"]\n   * @returns {string} e.g. \"john <mark>wa</mark>yne\"\n   */\n\n\n  var _proto = TokenHighlighter.prototype;\n\n  _proto.highlight = function highlight(text, tokens) {\n    var tagsLength = this._wrapText('').length;\n\n    var tokenDictionary = Object.create(null); // Create a token map for easier lookup below.\n\n    for (var i = 0, numTokens = tokens.length; i < numTokens; i++) {\n      var token = this._sanitizer.sanitize(tokens[i]);\n\n      var expandedTokens = this._indexStrategy.expandToken(token);\n\n      for (var j = 0, numExpandedTokens = expandedTokens.length; j < numExpandedTokens; j++) {\n        var expandedToken = expandedTokens[j];\n\n        if (!tokenDictionary[expandedToken]) {\n          tokenDictionary[expandedToken] = [token];\n        } else {\n          tokenDictionary[expandedToken].push(token);\n        }\n      }\n    } // Track actualCurrentWord and sanitizedCurrentWord separately in case we encounter nested tags.\n\n\n    var actualCurrentWord = '';\n    var sanitizedCurrentWord = '';\n    var currentWordStartIndex = 0; // Note this assumes either prefix or full word matching.\n\n    for (var i = 0, textLength = text.length; i < textLength; i++) {\n      var character = text.charAt(i);\n\n      if (character === ' ') {\n        actualCurrentWord = '';\n        sanitizedCurrentWord = '';\n        currentWordStartIndex = i + 1;\n      } else {\n        actualCurrentWord += character;\n        sanitizedCurrentWord += this._sanitizer.sanitize(character);\n      }\n\n      if (tokenDictionary[sanitizedCurrentWord] && tokenDictionary[sanitizedCurrentWord].indexOf(sanitizedCurrentWord) >= 0) {\n        actualCurrentWord = this._wrapText(actualCurrentWord);\n        text = text.substring(0, currentWordStartIndex) + actualCurrentWord + text.substring(i + 1);\n        i += tagsLength;\n        textLength += tagsLength;\n      }\n    }\n\n    return text;\n  }\n  /**\n   * @param text to wrap\n   * @returns Text wrapped by wrapper tag (e.g. \"foo\" becomes \"<mark>foo</mark>\")\n   * @private\n   */\n  ;\n\n  _proto._wrapText = function _wrapText(text) {\n    var tagName = this._wrapperTagName;\n    return \"<\" + tagName + \">\" + text + \"</\" + tagName + \">\";\n  };\n\n  return TokenHighlighter;\n}();\n\nexport { AllSubstringsIndexStrategy, CaseSensitiveSanitizer, ExactWordIndexStrategy, LowerCaseSanitizer, PrefixIndexStrategy, Search, SimpleTokenizer, StemmingTokenizer, StopWordsMap, StopWordsTokenizer, TfIdfSearchIndex, TokenHighlighter, UnorderedSearchIndex };","// Standard suffix manipulations.\nvar step2list = {\n  ational: 'ate',\n  tional: 'tion',\n  enci: 'ence',\n  anci: 'ance',\n  izer: 'ize',\n  bli: 'ble',\n  alli: 'al',\n  entli: 'ent',\n  eli: 'e',\n  ousli: 'ous',\n  ization: 'ize',\n  ation: 'ate',\n  ator: 'ate',\n  alism: 'al',\n  iveness: 'ive',\n  fulness: 'ful',\n  ousness: 'ous',\n  aliti: 'al',\n  iviti: 'ive',\n  biliti: 'ble',\n  logi: 'log'\n};\nvar step3list = {\n  icate: 'ic',\n  ative: '',\n  alize: 'al',\n  iciti: 'ic',\n  ical: 'ic',\n  ful: '',\n  ness: ''\n}; // Consonant-vowel sequences.\n\nvar consonant = '[^aeiou]';\nvar vowel = '[aeiouy]';\nvar consonants = '(' + consonant + '[^aeiouy]*)';\nvar vowels = '(' + vowel + '[aeiou]*)';\nvar gt0 = new RegExp('^' + consonants + '?' + vowels + consonants);\nvar eq1 = new RegExp('^' + consonants + '?' + vowels + consonants + vowels + '?$');\nvar gt1 = new RegExp('^' + consonants + '?(' + vowels + consonants + '){2,}');\nvar vowelInStem = new RegExp('^' + consonants + '?' + vowel);\nvar consonantLike = new RegExp('^' + consonants + vowel + '[^aeiouwxy]$'); // Exception expressions.\n\nvar sfxLl = /ll$/;\nvar sfxE = /^(.+?)e$/;\nvar sfxY = /^(.+?)y$/;\nvar sfxIon = /^(.+?(s|t))(ion)$/;\nvar sfxEdOrIng = /^(.+?)(ed|ing)$/;\nvar sfxAtOrBlOrIz = /(at|bl|iz)$/;\nvar sfxEED = /^(.+?)eed$/;\nvar sfxS = /^.+?[^s]s$/;\nvar sfxSsesOrIes = /^.+?(ss|i)es$/;\nvar sfxMultiConsonantLike = /([^aeiouylsz])\\1$/;\nvar step2 = /^(.+?)(ational|tional|enci|anci|izer|bli|alli|entli|eli|ousli|ization|ation|ator|alism|iveness|fulness|ousness|aliti|iviti|biliti|logi)$/;\nvar step3 = /^(.+?)(icate|ative|alize|iciti|ical|ful|ness)$/;\nvar step4 = /^(.+?)(al|ance|ence|er|ic|able|ible|ant|ement|ment|ent|ou|ism|ate|iti|ous|ive|ize)$/;\n/**\n * Stem `value`.\n *\n * @param {string} value\n * @returns {string}\n */\n\nexport function stemmer(value) {\n  /** @type {boolean} */\n  var firstCharacterWasLowerCaseY;\n  /** @type {RegExpMatchArray} */\n\n  var match;\n  value = String(value).toLowerCase(); // Exit early.\n\n  if (value.length < 3) {\n    return value;\n  } // Detect initial `y`, make sure it never matches.\n\n\n  if (value.charCodeAt(0) === 121 // Lowercase Y\n  ) {\n    firstCharacterWasLowerCaseY = true;\n    value = 'Y' + value.slice(1);\n  } // Step 1a.\n\n\n  if (sfxSsesOrIes.test(value)) {\n    // Remove last two characters.\n    value = value.slice(0, -2);\n  } else if (sfxS.test(value)) {\n    // Remove last character.\n    value = value.slice(0, -1);\n  } // Step 1b.\n\n\n  if (match = sfxEED.exec(value)) {\n    if (gt0.test(match[1])) {\n      // Remove last character.\n      value = value.slice(0, -1);\n    }\n  } else if ((match = sfxEdOrIng.exec(value)) && vowelInStem.test(match[1])) {\n    value = match[1];\n\n    if (sfxAtOrBlOrIz.test(value)) {\n      // Append `e`.\n      value += 'e';\n    } else if (sfxMultiConsonantLike.test(value)) {\n      // Remove last character.\n      value = value.slice(0, -1);\n    } else if (consonantLike.test(value)) {\n      // Append `e`.\n      value += 'e';\n    }\n  } // Step 1c.\n\n\n  if ((match = sfxY.exec(value)) && vowelInStem.test(match[1])) {\n    // Remove suffixing `y` and append `i`.\n    value = match[1] + 'i';\n  } // Step 2.\n\n\n  if ((match = step2.exec(value)) && gt0.test(match[1])) {\n    value = match[1] + step2list[match[2]];\n  } // Step 3.\n\n\n  if ((match = step3.exec(value)) && gt0.test(match[1])) {\n    value = match[1] + step3list[match[2]];\n  } // Step 4.\n\n\n  if (match = step4.exec(value)) {\n    if (gt1.test(match[1])) {\n      value = match[1];\n    }\n  } else if ((match = sfxIon.exec(value)) && gt1.test(match[1])) {\n    value = match[1];\n  } // Step 5.\n\n\n  if ((match = sfxE.exec(value)) && (gt1.test(match[1]) || eq1.test(match[1]) && !consonantLike.test(match[1]))) {\n    value = match[1];\n  }\n\n  if (sfxLl.test(value) && gt1.test(value)) {\n    value = value.slice(0, -1);\n  } // Turn initial `Y` back to `y`.\n\n\n  if (firstCharacterWasLowerCaseY) {\n    value = 'y' + value.slice(1);\n  }\n\n  return value;\n}","export const isBrowser = typeof window !== 'undefined';\nexport const isProduction = process.env.NODE_ENV === 'production';\n","export const searchOptions = {\n  indexStrategy: \"Prefix match\",\n  searchSanitiser: \"Lower Case\",\n  indexBy: [\n    \"rawMarkdownBody\",\n    \"excerpt\",\n    [\"frontmatter\", \"title\"],\n    [\"frontmatter\", \"author\", \"fullname\"],\n    [\"frontmatter\", \"author\", \"email\"],\n    [\"frontmatter\", \"categories\", \"name\"],\n    [\"frontmatter\", \"tags\", \"name\"],\n  ],\n  termFrequency: true,\n  removeStopWords: true,\n  stemWords: true,\n}\n","/**\n * A search component for the home page using the js-search library.\n * \n * Freely inspired by:\n *  - https://rodneylab.com/js-search-gatsby/\n *  - https://www.gatsbyjs.com/docs/adding-search-with-js-search/\n */\n\nimport React, { useEffect, useRef, useState } from \"react\"\nimport { useStaticQuery, graphql, Link, navigate } from \"gatsby\"\nimport {\n  AllSubstringsIndexStrategy,\n  CaseSensitiveSanitizer,\n  ExactWordIndexStrategy,\n  LowerCaseSanitizer,\n  PrefixIndexStrategy,\n  Search as JSSearch,\n  StemmingTokenizer,\n  StopWordsTokenizer,\n  TfIdfSearchIndex,\n  UnorderedSearchIndex,\n} from \"js-search\"\nimport { stemmer } from \"stemmer\"\nimport { isBrowser } from \"../utilities/utilities\"\nimport { searchOptions } from \"../utilities/search\"\nimport styled from \"styled-components\"\n\nconst Wrapper = styled.nav`\n  & > ol {\n    list-style-type: none;\n  }\n\n  & > ol > li {\n    margin-bottom: 0.5em;\n    white-space: normal;\n  }\n\n  & input {\n    width: 100%;\n  }\n`\n\nconst Search = () => {\n  const data = useStaticQuery(graphql`\n    query {\n      allMarkdownRemark(\n        sort: { fields: [frontmatter___date], order: DESC }\n        filter: { fileAbsolutePath: { regex: \"/(/blog/)/\" } }\n      ) {\n        nodes {\n          excerpt\n          fields {\n            slug\n          }\n          frontmatter {\n            date(fromNow: true, locale: \"it\")\n            title\n            description\n            author {\n              username\n              fullname\n              email\n            }\n            categories {\n              name\n              permalink\n            }\n            tags {\n              name\n              display\n            }\n          }\n          rawMarkdownBody\n          id\n        }\n      }\n    }\n  `)\n\n  const {\n    termFrequency,\n    removeStopWords,\n    stemWords,\n    indexStrategy,\n    searchSanitiser,\n    indexBy,\n  } = searchOptions\n\n  let searchParam\n  if (isBrowser) {\n    const params = new URLSearchParams(window.location.search.substring(1))\n    searchParam = params.get(\"q\") || \"\"\n  }\n\n  const [isLoading, setLoading] = useState(true)\n  const [search, setSearch] = useState(null)\n  const [searchQuery, setSearchQuery] = useState(searchParam)\n  const [searchResults, setSearchResults] = useState([])\n  const searchInputNode = useRef()\n\n  const addSearchIndices = dataToSearch => {\n    indexBy.forEach(element => {\n      dataToSearch.addIndex(element)\n    })\n  }\n\n  const rebuildIndex = () => {\n    const dataToSearch = new JSSearch(\"id\")\n\n    if (removeStopWords) {\n      dataToSearch.tokenizer = new StopWordsTokenizer(dataToSearch.tokenizer)\n    }\n    if (stemWords) {\n      dataToSearch.tokenizer = new StemmingTokenizer(\n        stemmer,\n        dataToSearch.tokenizer\n      )\n    }\n    if (indexStrategy === \"All\") {\n      dataToSearch.indexStrategy = new AllSubstringsIndexStrategy()\n    } else if (indexStrategy === \"Exact match\") {\n      dataToSearch.indexStrategy = new ExactWordIndexStrategy()\n    } else if (indexStrategy === \"Prefix match\") {\n      dataToSearch.indexStrategy = new PrefixIndexStrategy()\n    }\n\n    dataToSearch.sanitizer =\n      searchSanitiser === \"Case sensitive\"\n        ? new CaseSensitiveSanitizer()\n        : new LowerCaseSanitizer()\n    dataToSearch.searchIndex =\n      termFrequency === true\n        ? new TfIdfSearchIndex(\"id\")\n        : new UnorderedSearchIndex()\n\n    addSearchIndices(dataToSearch)\n    dataToSearch.addDocuments(data.allMarkdownRemark.nodes)\n    setSearch(dataToSearch)\n    setLoading(false)\n  }\n\n  useEffect(() => {\n    rebuildIndex()\n  }, [])\n\n  useEffect(() => {\n    if (searchInputNode.current) {\n      searchInputNode.current.focus()\n    }\n    if (search !== null && searchQuery !== \"\") {\n      const queryResult = search.search(searchQuery)\n      setSearchResults(queryResult)\n    }\n  }, [search])\n\n  const handleChange = event => {\n    const queryResult = search.search(event.target.value)\n    setSearchQuery(event.target.value)\n    setSearchResults(queryResult.slice(0, 10))\n  }\n\n  const handleSubmit = event => {\n    event.preventDefault()\n    navigate(`?q=${searchQuery}`)\n  }\n\n  if (isLoading || search === null) {\n    return null\n  }\n\n  return (\n    <Wrapper>\n      <h3>Cerca</h3>\n      <form onSubmit={handleSubmit}>\n        <input\n          aria-label=\"Cerca articoli del blog\"\n          ref={searchInputNode}\n          autoComplete=\"off\"\n          spellCheck={false}\n          id=\"Search\"\n          value={searchQuery}\n          onChange={handleChange}\n          placeholder=\"Cerca\"\n          type=\"search\"\n        />\n      </form>\n      {searchQuery === \"\" ? null : (\n        <>\n          {searchResults.length ? (\n            <ol>\n              {searchResults.map(value => {\n                const { id } = value\n                return (\n                  <li key={id}>\n                    <Link to={value.fields.slug}>\n                      {value.frontmatter.title}\n                    </Link>\n                  </li>\n                )\n              })}\n            </ol>\n          ) : (\n            <p>Nessun risultato</p>\n          )}\n        </>\n      )}\n    </Wrapper>\n  )\n}\n\nexport default Search\n","import * as React from \"react\"\nimport { graphql } from \"gatsby\"\n\nimport Layout from \"../components/layout\"\nimport Seo from \"../components/seo\"\nimport PostItem from \"../components/post-item\"\nimport CategoryMenu from \"../components/category-menu\"\nimport styled from \"styled-components\"\nimport TagCloud from \"../components/tag-cloud\"\nimport Search from \"../components/search\"\n\nconst ContentWrapper = styled.div`\n  display: flex;\n  align-items: stretch;\n`\n\nconst Sidebar = styled.div`\n  font-size: 0.8rem;\n  padding-left: 1rem;\n  width: 25%;\n\n  & h3 {\n    color: #d75a20;\n    margin-top: 1rem;\n    margin-bottom: 0px;\n    font-size: 1.2em;\n  }\n\n  & ol {\n    margin-block-start: 0.5em;\n    margin-block-end: 0px;\n  }\n`\n\nconst BlogIndex = ({ data, location }) => {\n  const siteTitle = data.site.siteMetadata?.title || `Title`\n  const posts = data.allMarkdownRemark.nodes\n\n  if (posts.length === 0) {\n    return (\n      <Layout location={location} title={siteTitle}>\n        <Seo title=\"All posts\" />\n        <p>\n          No blog posts found. Add markdown posts to \"content/blog\" (or the\n          directory you specified for the \"gatsby-source-filesystem\" plugin in\n          gatsby-config.js).\n        </p>\n      </Layout>\n    )\n  }\n\n  return (\n    <Layout location={location} title={siteTitle}>\n      <Seo title=\"All posts\" />\n      <ContentWrapper>\n        <ol style={{ listStyle: `none` }}>\n          {posts.map(post => {\n            const title = post.frontmatter.title || post.fields.slug\n            const content = post.frontmatter.description || post.excerpt\n\n            return (\n              <PostItem\n                key={post.fields.slug}\n                slug={post.fields.slug}\n                title={title}\n                author={post.frontmatter.author}\n                date={post.frontmatter.date}\n                content={content}\n                categories={post.frontmatter.categories}\n                tags={post.frontmatter.tags}\n              />\n            )\n          })}\n        </ol>\n        <Sidebar>\n          <Search />\n          <CategoryMenu />\n          <TagCloud />\n        </Sidebar>\n      </ContentWrapper>\n    </Layout>\n  )\n}\n\nexport default BlogIndex\n\nexport const pageQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    allMarkdownRemark(\n      sort: { fields: [frontmatter___date], order: DESC }\n      filter: { fileAbsolutePath: { regex: \"/(/blog/)/\" } }\n    ) {\n      nodes {\n        excerpt\n        fields {\n          slug\n        }\n        frontmatter {\n          date(fromNow: true, locale: \"it\")\n          title\n          description\n          author {\n            username\n            fullname\n            email\n          }\n          categories {\n            name\n            permalink\n          }\n          tags {\n            name\n            display\n          }\n        }\n      }\n    }\n  }\n`\n"],"names":["Wrapper","styled","categories","useStaticQuery","allMarkdownRemark","group","map","category","key","fieldValue","Link","to","nodes","frontmatter","find","c","permalink","name","totalCount","AuthorWrapper","LinksWrapper","slug","title","author","date","content","tags","className","itemScope","itemType","itemProp","dangerouslySetInnerHTML","__html","cloudTags","tag","display","t","sort","a","b","slice","toLowerCase","localeCompare","reduce","curr","prevMin","prevMax","Math","min","max","Infinity","style","fontSize","AllSubstringsIndexStrategy","prototype","expandToken","token","string","expandedTokens","i","length","j","charAt","push","ExactWordIndexStrategy","PrefixIndexStrategy","CaseSensitiveSanitizer","sanitize","text","trim","LowerCaseSanitizer","toLocaleLowerCase","getNestedFieldValue","object","path","value","TfIdfSearchIndex","uidFieldName","this","_uidFieldName","_tokenToIdfCache","_tokenMap","_proto","indexDocument","uid","doc","tokenDatum","tokenMap","$numDocumentOccurrences","$totalNumOccurrences","$uidMap","uidMap","$document","$numTokenOccurrences","search","tokens","corpus","uidToDocumentMap","numTokens","tokenMetadata","numKeys","keys","Object","documents","calculateTfIdf","_createCalculateTfIdf","documentA","documentB","_createCalculateIdf","tokenToIdfCache","numDocumentsWithToken","log","calculateIdf","document","score","inverseDocumentFrequency","Array","UnorderedSearchIndex","_tokenToUidToDocumentMap","intersectingDocumentMap","tokenToUidToDocumentMap","documentMap","REGEX","SimpleTokenizer","tokenize","split","filter","StemmingTokenizer","stemmingFunction","decoratedTokenizer","_stemmingFunction","_tokenizer","StopWordsMap","able","about","across","after","all","almost","also","am","among","an","and","any","are","as","at","be","because","been","but","by","can","cannot","could","dear","did","does","either","ever","every","from","got","had","has","have","he","her","hers","him","his","how","however","into","is","it","its","just","least","like","likely","may","me","might","most","must","my","neither","no","nor","not","of","off","often","on","only","or","other","our","own","rather","said","say","says","she","should","since","so","some","than","that","the","their","them","then","there","these","they","tis","too","twas","us","wants","was","we","were","what","when","where","which","who","whom","why","will","would","yet","you","your","StopWordsTokenizer","_defineProperties","target","props","descriptor","enumerable","configurable","writable","defineProperty","Search","Error","_indexStrategy","_searchIndex","_sanitizer","_documents","_searchableFields","Constructor","protoProps","staticProps","addDocument","addDocuments","concat","indexDocuments_","addIndex","field","query","_initialized","indexStrategy","sanitizer","searchIndex","tokenizer","di","numDocuments","sfi","numSearchableFields","searchableField","toString","fieldTokens","fti","numFieldValues","fieldToken","eti","nummExpandedTokens","expandedToken","set","get","step2list","ational","tional","enci","anci","izer","bli","alli","entli","eli","ousli","ization","ation","ator","alism","iveness","fulness","ousness","aliti","iviti","biliti","logi","step3list","icate","ative","alize","iciti","ical","ful","ness","vowel","consonants","vowels","gt0","RegExp","eq1","gt1","vowelInStem","consonantLike","sfxLl","sfxE","sfxY","sfxIon","sfxEdOrIng","sfxAtOrBlOrIz","sfxEED","sfxS","sfxSsesOrIes","sfxMultiConsonantLike","step2","step3","step4","stemmer","firstCharacterWasLowerCaseY","match","String","charCodeAt","test","exec","isBrowser","window","searchOptions","searchParam","data","termFrequency","removeStopWords","stemWords","searchSanitiser","indexBy","URLSearchParams","location","substring","useState","isLoading","setLoading","setSearch","searchQuery","setSearchQuery","searchResults","setSearchResults","searchInputNode","useRef","rebuildIndex","dataToSearch","JSSearch","forEach","element","addSearchIndices","useEffect","current","focus","queryResult","onSubmit","event","preventDefault","navigate","ref","autoComplete","spellCheck","id","onChange","placeholder","type","fields","ContentWrapper","Sidebar","siteTitle","site","siteMetadata","posts","listStyle","post","description","excerpt"],"sourceRoot":""}