{
    "componentChunkName": "component---src-templates-blog-post-js",
    "path": "/articles/2005/11/22/jsf-and-facelets/",
    "result": {"data":{"site":{"siteMetadata":{"title":"JUG Padova"}},"markdownRemark":{"id":"43c84015-fecc-5de4-9607-d9d9600f1618","excerpt":"One of the main issues with JSF is the plenty of use of custom tags in\nthe view. If you don’t want to use a visual instrument like Java Studio\nCreator, building…","html":"<p>One of the main issues with JSF is the plenty of use of custom tags in\nthe view. If you don’t want to use a visual instrument like Java Studio\nCreator, building a page could become a nightmare, especially if your\ngraphic designer uses a huge amount of html components.</p>\n<p>If you ever tried Tapestry you know that with that framework this is not\na problem, when you have the html template you have only to put the\nproper attribute to dynamically rendered tags and it’s all done.</p>\n<p>Now also JSF allows you to do that: the project\n<a href=\"https://facelets.dev.java.net/\">facelets</a> aims to have the same\napproach used when developing with Tapestry. With facelets you can use\ntemplating and write a plain html file as a view.</p>\n<p>Facelets is registered in the JSF framework as a <code class=\"language-text\">ViewHandler</code>, so the\nonly things you have to do to start using facelest are</p>\n<ul>\n<li><em>make JSF use facelets as ViewHandler</em>: put those lines in the\n<code class=\"language-text\">faces-config.xml</code></li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"xml\"><pre class=\"language-xml\"><code class=\"language-xml\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>faces-config</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>application</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>view-handler</span><span class=\"token punctuation\">></span></span>com.sun.facelets.FaceletViewHandler<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>view-handler</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>application</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>faces-config</span><span class=\"token punctuation\">></span></span></code></pre></div>\n<ul>\n<li><em>import libraries</em>: you have to put in your classpath the facelets\nimplementation jar (jsf-facelets.jar) that you can find in the\nfacelets’ site.</li>\n</ul>\n<!-- -->\n<ul>\n<li><em>modify the DEFAULT_SUFFIX param</em>: facelets pages are simple xhtml\nfiles. JSF by default uses jsp files as view, so you have to tell\nthe framework that now the views are the xhtml files. To do this you\nsimply modify your <code class=\"language-text\">web.xml</code> in this way:</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"xml\"><pre class=\"language-xml\"><code class=\"language-xml\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>context-param</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>param-name</span><span class=\"token punctuation\">></span></span>javax.faces.DEFAULT\\_SUFFIX<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>param-name</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>param-value</span><span class=\"token punctuation\">></span></span>.xhtml<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>param-value</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>context-param</span><span class=\"token punctuation\">></span></span></code></pre></div>\n<p>If you don’t want to become crazy with html stuff (your graphic designer\nis paid enough for this, isn’t it?) and you want to use JSF, try out\nfacelets. If you want to learn more about facelets\n<a href=\"http://www.jsfcentral.com/articles/facelets_1.html\">here</a> you can find\nan introductive article and\n<a href=\"https://facelets.dev.java.net/nonav/docs/dev/docbook.html\">here</a> you’ve\ngot the reference documentation.</p>","frontmatter":{"title":"JSF and Facelets","date":"22 novembre 2005","description":null,"author":{"username":"andrea.nasato","fullname":"Andrea Nasato","email":"andrea.nasato@jugpadova.it"},"categories":[{"name":"Tips & Tricks","permalink":"tips-and-tricks"}],"tags":[{"name":"jsf","display":"JSF"},{"name":"facelets","display":"Facelets"}]}},"previous":{"fields":{"slug":"/articles/2005/11/18/jugmeeting-22-sito-axis-jsf-tapestry/"},"frontmatter":{"title":"JUGMeeting #22 - Sito/Axis/JSF/Tapestry"}},"next":{"fields":{"slug":"/articles/2005/11/26/maven-2-spring-and-jta-depencies/"},"frontmatter":{"title":"Maven 2: Spring and JTA dependencies"}}},"pageContext":{"id":"43c84015-fecc-5de4-9607-d9d9600f1618","previousPostId":"e77c310a-d561-5cf8-9f71-8204c297f632","nextPostId":"30cc965d-c7f7-555a-9564-c7fc449c5cc3"}},
    "staticQueryHashes": ["2841359383"]}