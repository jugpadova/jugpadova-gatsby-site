{
    "componentChunkName": "component---src-templates-blog-post-js",
    "path": "/articles/2006/01/10/serialize-a-bean-using-jdbc/",
    "result": {"data":{"site":{"siteMetadata":{"title":"JUG Padova"}},"markdownRemark":{"id":"f0201a0c-ba84-5e86-a527-bb32f100f2a3","excerpt":"Sometimes,  in my work as programmer, I need to serialize an object (bean) into a table, in a BLOB field, as well as retrieves bean from a ResultSet.\r\nI haveâ€¦","html":"<p>Sometimes,  in my work as programmer, I need to serialize an object (bean) into a table, in a BLOB field, as well as retrieves bean from a ResultSet.\r\nI have realized a simple example that, using JDBC, allows to obtain this.</p>\n<p>Here the method to fill PreparedStatement :</p>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">fillPreparedStatement</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">PreparedStatement</span> pst<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> index<span class=\"token punctuation\">,</span>\r\n         <span class=\"token class-name\">Serializable</span> obj<span class=\"token punctuation\">)</span> <span class=\"token keyword\">throws</span> <span class=\"token class-name\">Exception</span> <span class=\"token punctuation\">{</span>\r\n\r\n      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>obj <span class=\"token operator\">!=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\r\n         <span class=\"token class-name\">ByteArrayOutputStream</span> regStore <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ByteArrayOutputStream</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n\r\n         <span class=\"token class-name\">ObjectOutputStream</span> regObjectStream <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ObjectOutputStream</span><span class=\"token punctuation\">(</span>regStore<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n         regObjectStream<span class=\"token punctuation\">.</span><span class=\"token function\">writeObject</span><span class=\"token punctuation\">(</span>obj<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n         <span class=\"token keyword\">byte</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> regBytes <span class=\"token operator\">=</span> regStore<span class=\"token punctuation\">.</span><span class=\"token function\">toByteArray</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n         regObjectStream<span class=\"token punctuation\">.</span><span class=\"token function\">close</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n         regStore<span class=\"token punctuation\">.</span><span class=\"token function\">close</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n         <span class=\"token class-name\">ByteArrayInputStream</span> regArrayStream <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ByteArrayInputStream</span><span class=\"token punctuation\">(</span>regBytes<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n         pst<span class=\"token punctuation\">.</span><span class=\"token function\">setBinaryStream</span><span class=\"token punctuation\">(</span>index<span class=\"token punctuation\">,</span> regArrayStream<span class=\"token punctuation\">,</span> regBytes<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n      <span class=\"token punctuation\">}</span><span class=\"token comment\">// end of if</span>\r\n      <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\r\n         pst<span class=\"token punctuation\">.</span><span class=\"token function\">setNull</span><span class=\"token punctuation\">(</span>index<span class=\"token punctuation\">,</span> <span class=\"token class-name\">Types</span><span class=\"token punctuation\">.</span>BLOB<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n      <span class=\"token punctuation\">}</span>\r\n<span class=\"token punctuation\">}</span><span class=\"token comment\">// end of method</span>\r\n</code></pre></div>\n<p>Here the method to retrieve bean from ResultSet.</p>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token class-name\">Object</span> <span class=\"token function\">getFromResultSet</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">ResultSet</span> rs<span class=\"token punctuation\">,</span> <span class=\"token class-name\">String</span> columnName<span class=\"token punctuation\">)</span>\r\n         <span class=\"token keyword\">throws</span> <span class=\"token class-name\">Exception</span> <span class=\"token punctuation\">{</span>\r\n      <span class=\"token keyword\">byte</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> regBytes <span class=\"token operator\">=</span> rs<span class=\"token punctuation\">.</span><span class=\"token function\">getBytes</span><span class=\"token punctuation\">(</span>columnName<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n      <span class=\"token class-name\">ByteArrayInputStream</span> regArrayStream <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ByteArrayInputStream</span><span class=\"token punctuation\">(</span>regBytes<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n      <span class=\"token class-name\">ObjectInputStream</span> regObjectStream <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ObjectInputStream</span><span class=\"token punctuation\">(</span>\r\n            regArrayStream<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n      <span class=\"token keyword\">return</span> regObjectStream<span class=\"token punctuation\">.</span><span class=\"token function\">readObject</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>I tested this code using MySQL 4.1 db.\r\nHope this example could save your valuable time.\r\nEnrico.</p>","frontmatter":{"title":"Serialize a bean using jdbc","date":"10 gennaio 2006","description":null,"author":{"username":"enrico.giurin","fullname":"Enrico Giurin","email":"enrico.giurin@jugpadova.it"},"categories":[{"name":"Tips & Tricks","permalink":"tips-and-tricks"}],"tags":[{"name":"blob","display":"blob"},{"name":"jdbc","display":"jdbc"},{"name":"bean","display":"bean"}]}},"previous":{"fields":{"slug":"/articles/2006/01/09/una-nuova-rivista-di-programmazione/"},"frontmatter":{"title":"Una nuova rivista di programmazione"}},"next":{"fields":{"slug":"/articles/2006/01/15/xom/"},"frontmatter":{"title":"Xom"}}},"pageContext":{"id":"f0201a0c-ba84-5e86-a527-bb32f100f2a3","previousPostId":"c33d2004-2e5e-56d8-957d-c8550a81b943","nextPostId":"5b425543-730f-5a09-9adf-e566feb2ca2c"}},
    "staticQueryHashes": ["2841359383"]}