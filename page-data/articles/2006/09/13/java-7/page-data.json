{
    "componentChunkName": "component---src-templates-blog-post-js",
    "path": "/articles/2006/09/13/java-7/",
    "result": {"data":{"site":{"siteMetadata":{"title":"JUG Padova"}},"markdownRemark":{"id":"8f69b35c-7788-53d8-82c3-b2c343e19987","excerpt":"No, non avete letto male, non è ancora uscita la release ufficiale di\nJava 6, che già si pensa a cosa inserire in Java 7. In questi giorni si è aperta nella…","html":"<p>No, non avete letto male, non è ancora uscita la release ufficiale di\nJava 6, che già si pensa a cosa inserire in Java 7.</p>\n<p>In questi giorni si è aperta nella blogosfera che ruota attorno a Java\nuna piccola guerra di religione sulla necessità o meno di inserire le\nchiusure nel linguaggio.</p>\n<p>Per chi è avezzo di Smalltalk, Ruby o anche C# il concetto di chiusura\nè familiare. Per chi invece ha visto solo Java, il concetto è nuovo (o\nquasi).</p>\n<p>Brevemente un <a href=\"http://www.martinfowler.com/bliki/Closure.html\">closure</a>\nè una funzione dichiarata all’interno di un’altra funzione della quale\ncondivide le variabili.<br>\n<a href=\"http://gafter.blogspot.com/2006/09/closures-for-java-version-01.html\">Neil\nGafter</a>\n(già co-autore del Collection Framework) propone che questo tipo di\ncostrutto sia inserito anche all’interno di Java.</p>\n<p>Il concetto non è completamente nuovo perché in Java esistono già dei\ncostrutti simili, le classi interne anonime, che svolgono grossomodo lo\nstesso compito, con due differenze, secondo Gafter, importanti:</p>\n<ol>\n<li>Le classi interne anonime possono lavorare con variabili del metodo\nche le contiene solo se queste sono dichiarate <code>final</code>.</li>\n<li>La sintassi che si ottiene con le chiusure è più semplice e pulita.</li>\n</ol>\n<p>Vediamo un piccolo esempio del secondo punto. Supponiamo di avere un\nmetodo che ha il compito di sottomettere un task ad un altro thread\n(usando <code>java.util.concurrent.Executor</code>).</p>\n<p>Con le classi anonime scriveremmo il seguente codice:</p>\n<div class=\"gatsby-highlight\" data-language=\"\\\"><pre class=\"language-\\\"><code class=\"language-\\\">void sayHelloInAnotherThread(Executor ex) {\\\nex.execute(new Runnable() {\\\npublic void run() {\\\nSystem.out.println(&quot;hello&quot;);\\\n}\\\n});\\\n}\\</code></pre></div>\n<p>mentre con le chiusure potremmo scrivere (la sintassi è ancora oggetto\ndi discussione):</p>\n<div class=\"gatsby-highlight\" data-language=\"\\\"><pre class=\"language-\\\"><code class=\"language-\\\">void sayHelloInAnotherThread(Executor ex) {\\\nex.execute(() {\\\nSystem.out.println(&quot;hello&quot;);\\\n});\\\n}\\</code></pre></div>\n<p>La questione è aperta. Anche\n<a href=\"http://blogs.sun.com/jag/entry/the_black_hole_theory_of\">James\nGosling</a> ha espresso dubbi circa la vera utilità di tale feature.</p>\n<p>Staremo a vedere.</p>","frontmatter":{"title":"Java 7","date":"13 settembre 2006","description":null,"author":{"username":"andrea.nasato","fullname":"Andrea Nasato","email":"andrea.nasato@jugpadova.it"},"categories":[{"name":"Programmazione","permalink":"programmazione"}],"tags":[{"name":"java","display":"java"},{"name":"closures","display":"closures"},{"name":"gosling","display":"Gosling"}]}},"previous":{"fields":{"slug":"/articles/2006/06/28/java-conference-2006-first-day/"},"frontmatter":{"title":"Java Conference 2006 - First day"}},"next":{"fields":{"slug":"/articles/2006/09/29/jug-padova-openexp/"},"frontmatter":{"title":"JUG Padova @ OpenExp"}}},"pageContext":{"id":"8f69b35c-7788-53d8-82c3-b2c343e19987","previousPostId":"98aa7b8c-191b-59f0-b8d9-c7b0bc2dc669","nextPostId":"9465f8ac-b0a2-52ca-9eb5-a8d56261ba5a"}},
    "staticQueryHashes": ["2841359383"]}